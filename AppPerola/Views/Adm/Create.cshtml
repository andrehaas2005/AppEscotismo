@model AppPerola.Models.tb_chamadas

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script language="JavaScript" type="text/javascript" src="~/Scripts/raptor.js"></script>
<script type="text/javascript">
    $('#raptor-docked-element').raptor({
        autoEnable: true,            // Enable the editor automaticly
        plugins: {                   // Plugin options
            dock: {                  // Dock specific plugin options
                docked: true,        // Start the editor already docked
                dockToElement: true, // Dock the editor inplace of the element
                persist: false       // Do not save the docked state
            }
        }
    });

</script>
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tb_chamadas</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.titulo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titulo)
                @Html.ValidationMessageFor(model => model.titulo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resumo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Resumo)
                @Html.ValidationMessageFor(model => model.Resumo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Texto, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Texto)
                @Html.ValidationMessageFor(model => model.Texto)
                <div id="raptor-docked-element"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlImagemPrincipal, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlImagemPrincipal)
                @Html.ValidationMessageFor(model => model.UrlImagemPrincipal)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlImagemMini, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlImagemMini)
                @Html.ValidationMessageFor(model => model.UrlImagemMini)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCriacao, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCriacao)
                @Html.ValidationMessageFor(model => model.DataCriacao)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataAtualizacao, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataAtualizacao)
                @Html.ValidationMessageFor(model => model.DataAtualizacao)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ativo)
                @Html.ValidationMessageFor(model => model.Ativo)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
